{"version":3,"sources":["img/1.jpg","coins.jsx","header.jsx","footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Coins","name","image","price","symbol","volume","priceChange","marketcap","marketcaprank","Card","style","width","className","Img","variant","src","height","Body","Title","Text","toLocaleString","color","class","toFixed","Header","fontFamily","fontSize","aria-hidden","Footer","textAlign","href","App","useState","open","setOpen","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","id","Button","onClick","aria-controls","aria-expanded","Fade","in","type","onChange","e","target","value","placeholder","img","alt","map","key","total_volume","current_price","price_change_percentage_24h","market_cap","market_cap_rank","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.336d0f61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.d5b57417.jpg\";","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nconst Coins = ({name,image,symbol,price,volume,priceChange,marketcap,marketcaprank}) => {\r\n    return (\r\n  \r\n     <Card style={{ width: '18rem' }} className=\"m-2 col-md-6 col-sm-12 col-lg-3 mx-auto cardd\">\r\n         <br/>\r\n    <Card.Img variant=\"top\" src={image} style={{ width: '100px',height:'100px'}} className=\"mx-auto d-block\"/>\r\n    <Card.Body>\r\n    <Card.Title><h2>{name}</h2></Card.Title>\r\n    <hr/>\r\n    <Card.Text>\r\n    <p className=\"coin-price\">Price = ₹{price}</p>\r\n                    <p className=\"coin-volume\">Volume = ₹{volume.toLocaleString()}</p>\r\n                    {\r\n    priceChange<0?(<p className=\"coin-percent red\" style={{color:\"red\"}}>\r\n      <i class=\"fa fa-arrow-circle-down\"></i>  {priceChange.toFixed(2)}%\r\n    </p>):(<p className=\"coin-percent green\" style={{color:\"#009988\"}}>\r\n    <i class=\"fa fa-arrow-circle-up\"></i>  {priceChange.toFixed(2)}%\r\n    </p>)\r\n}\r\n<p className=\"coin-marketcap\">\r\n    MKT Cap:₹{marketcap.toLocaleString()}\r\n</p>\r\n<p className=\"coin-marketcap\">\r\n    Market Rank : {marketcaprank.toLocaleString()}\r\n</p>\r\n    </Card.Text>\r\n     </Card.Body>\r\n     <br/>\r\n</Card>\r\n\r\n  \r\n    )\r\n}\r\nexport default Coins;","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-dark display-4\" style={{color:\"#ffff\",fontFamily:\"fantasy\"}}>\r\n        <div className=\"container\">\r\n          <h1 className=\"navbar-brand\" style={{ fontSize:\"30px\"}}>\r\n          <i class=\"fa fa-btc\" aria-hidden=\"true\"></i>  CryptoCurrency Tracker\r\n          </h1>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"navbar navbar-expand-lg bg-dark display-4\" style={{color:\"#ffff\",fontFamily:\"fantasy\"}}>\r\n        <div className=\"container\">\r\n          <h3 className=\"mx-auto\" style={{textAlign:\"center\"}}>\r\n          <a href=\"https://github.com/vipashaaV321\"> <i class=\"fa fa-copyright\" aria-hidden=\"true\"></i> Made By Vipasha</a>\r\n          </h3>\r\n        </div>\r\n      </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport Coins from './coins'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Fade from 'react-bootstrap/Fade'\nimport Button from 'react-bootstrap/Button'\nimport Header from './header'\nimport Footer from './footer'\nimport './App.css';\nimport img from './img/1.jpg';\n// https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\nfunction App() {\n  const [open, setOpen] = useState(false);\n  const [coins,setCoins]=useState([])\n  const [search,setSearch]=useState('')\n  useEffect(()=>{\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res=>{\n      setCoins(res.data)\n    }).catch(error=>console.log(error))\n  },[])\n\n  const handleChange=e=>{\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins=coins.filter(coin=>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n\n  )\n  return (\n<>\n<Header/>\n<section id=\"header\" className=\"d-flex align-items-center\">\n      <div className=\"container-fluid nav_bg\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 pt-3 pt-lg-5 order-2 order-lg-1 d-flex justify-content-center flex-column mx-auto\">\n              \n              <h1 style={{color:\"#333\"}}>Find Any CryptoCurrency Here And Start Trading!! </h1>\n              <div className=\"mt-3\">\n              <div className=\"row\">\n          <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-fade-text\"\n        aria-expanded={open}\n        className=\"col-6  btn-lg btn-info mx-auto\"\n      >\n       Search Currency\n      </Button>\n      </div>\n     \n      <br/>\n      <Fade in={open}>\n        <div id=\"example-fade-text\">\n        <form>\n            <input type=\"text\" className=\"col-12 mx-auto\" onChange={handleChange} placeholder=\"Enter Currency Name\"/>\n          </form>\n         </div>\n      </Fade>\n              </div>\n            </div>\n            <div class=\"col-lg-6 order-1 order-lg-2 header-img pt-3\">\n              <img src={img} className=\"img-fluid animated\" alt=\"home-img\"/>\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n      <div className=\"coin-app mx-auto App-header \">\n        <div className=\"coin-search\">\n          <h1 className=\"coin-text \">\n            {/* Search Crypto Currency */}\n          </h1>\n         \n       \n        </div>\n        <div className=\"row p-2 m-2\">\n        {filteredCoins.map(coin=>{\n          return(\n\n      <Coins key={coin.id} \n      name={coin.name} \n      image={coin.image} \n      symbol={coin.symbol} \n      volume={coin.total_volume}\n      price={coin.current_price}\n      priceChange={coin.price_change_percentage_24h}\n      marketcap={coin.market_cap}\n      marketcaprank={coin.market_cap_rank}\n      />\n    \n          );\n        })}\n      </div>\n</div>\n<Footer/>\n</>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import bootstrap from 'bootstrap/dist/css/bootstrap.min.css'\n// import './bootstrap/dist/js/popper.min.js';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}